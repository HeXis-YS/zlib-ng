# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

EXPORTS += [
    'mozzconf.h',
    'zconf.h',
    'zlib.h',
]

if CONFIG['ZLIB_IN_MOZGLUE']:
    FINAL_LIBRARY = 'mozglue'
else:
    # The final library is in config/external/zlib
    FINAL_LIBRARY = 'zlib'

# These files can't be unified because zlib's headers don't use include guards.
SOURCES += [
    'adler32.c',
    'arch/generic/adler32_c.c',
    'arch/generic/adler32_fold_c.c',
    'arch/generic/chunkset_c.c',
    'arch/generic/compare256_c.c',
    'arch/generic/crc32_braid_c.c',
    'arch/generic/crc32_fold_c.c',
    'arch/generic/slide_hash_c.c',
    'compress.c',
    'crc32.c',
    'crc32_braid_comb.c',
    'deflate.c',
    'deflate_fast.c',
    'deflate_huff.c',
    'deflate_medium.c',
    'deflate_quick.c',
    'deflate_rle.c',
    'deflate_slow.c',
    'deflate_stored.c',
    'gzlib.c',
    'gzread.c',
    'gzwrite.c',
    'infback.c',
    'inflate.c',
    'inftrees.c',
    'insert_string.c',
    'insert_string_roll.c',
    'trees.c',
    'uncompr.c',
    'zutil.c',
]

if CONFIG["TARGET_CPU"] == "x86_64":
    SOURCES += [
        'arch/x86/adler32_avx2.c',
        'arch/x86/adler32_avx512.c',
        'arch/x86/adler32_avx512_vnni.c',
        'arch/x86/adler32_sse42.c',
        'arch/x86/adler32_ssse3.c',
        'arch/x86/chunkset_avx2.c',
        'arch/x86/chunkset_sse2.c',
        'arch/x86/chunkset_ssse3.c',
        'arch/x86/compare256_avx2.c',
        'arch/x86/compare256_sse2.c',
        'arch/x86/crc32_pclmulqdq.c',
        'arch/x86/crc32_vpclmulqdq.c',
        'arch/x86/slide_hash_avx2.c',
        'arch/x86/slide_hash_sse2.c',
    ]

if CONFIG["TARGET_CPU"] == "aarch64":
    DEFINES["HAVE_ARM_ACLE_H"] = True
    SOURCES += [
        'arch/arm/adler32_neon.c',
        'arch/arm/chunkset_neon.c',
        'arch/arm/compare256_neon.c',
        'arch/arm/crc32_acle.c',
        'arch/arm/slide_hash_neon.c',
    ]

DEFINES["ZLIB_COMPAT"] = True
# DEFINES["WITH_GZFILEOP"] = True
DEFINES["DISABLE_RUNTIME_CPU_DETECTION"] = True
DEFINES["HAVE_ATTRIBUTE_ALIGNED"] = True
DEFINES["HAVE_BUILTIN_ASSUME_ALIGNED"] = True
DEFINES["HAVE_BUILTIN_CTZ"] = True
DEFINES["HAVE_BUILTIN_CTZLL"] = True
DEFINES["HAVE_VISIBILITY_INTERNAL"] = True

if CONFIG["OS_TARGET"] == "WINNT":
    DEFINES["ZLIB_DLL"] = True

if CONFIG['CC_TYPE'] == 'clang':
    CFLAGS += [
        '-include',
        TOPSRCDIR + '/modules/zlib/src/zlib_simd.h',
        "-fvisibility=default",
    ]
elif CONFIG['CC_TYPE'] == 'clang-cl':
    CFLAGS += [
        "-FI",
        TOPSRCDIR + '/modules/zlib/src/zlib_simd.h',
    ]

# We allow warnings for third-party code that can be updated from upstream.
AllowCompilerWarnings()

# ... most warnings, anyway. https://github.com/madler/zlib/issues/633
if CONFIG['CC_TYPE'] in ('clang', 'clang-cl'):
    CFLAGS += ["-Wno-deprecated-non-prototype"]
